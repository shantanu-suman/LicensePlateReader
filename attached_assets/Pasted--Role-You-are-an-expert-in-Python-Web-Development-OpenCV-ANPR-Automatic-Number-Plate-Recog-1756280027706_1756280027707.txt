**Role:** You are an expert in **Python, Web Development, OpenCV, ANPR (Automatic Number Plate Recognition), Flask/Streamlit, and Database Integration**.

**Task:** Develop a **web-based application** that implements an ANPR system with the following features:

---

### **Requirements**:

1. **Camera Input**:

   * The system should allow a **configurable camera input** (default is the laptop webcam).
   * Optionally support USB/IP cameras in the future.

2. **Number Plate Detection**:

   * Use **OpenCV / EasyOCR / Tesseract** or any modern ANPR model to detect and read vehicle registration numbers in real-time.
   * The detection should work for a standard license plate format.

3. **Database Integration**:

   * Maintain a database (SQLite/PostgreSQL) of registered vehicle numbers.
   * When a detected number matches a record in the database, trigger **Red light** on the dashboard.
   * If the vehicle is not registered, trigger **Green light**.

4. **Dashboard**:

   * Web-based dashboard (using Flask + HTML/CSS/JS or Streamlit).
   * Display **live camera feed** with detected plate highlighted.
   * Show **red/green light indicator** based on database check.
   * Display the **number plate text** and **timestamp** of detection.

5. **Logging**:

   * Store detection events in a **CSV/JSON/log file** with columns:
     `Timestamp | Number Plate | Status (Registered/Unregistered)`

6. **Configurable Options**:

   * Ability to switch camera source.
   * Option to **add/remove vehicle numbers** from the database via dashboard.

7. **Implementation Guidance**:

   * Use modular Python code with clear separation:

     * Camera capture
     * Plate detection
     * Database access
     * Dashboard rendering
     * Logging

8. **Output**:

   * Provide **full project structure**.
   * Include **requirements.txt** or `Pipfile`.
   * Include **instructions to run locally**.
   * Ensure **real-time performance** (at least 5-10 FPS on laptop webcam).

---

### **Optional Enhancements (Bonus)**:

* Highlight the plate in the video feed with a bounding box.
* Display historical log data on the dashboard.
* Play a **sound alert** for registered vehicles.

---

**Output Format Expected from Agent**:

* Project directory structure
* Python code files (`main.py`, `anpr.py`, `database.py`, etc.)
* HTML/CSS/JS files if Flask is used
* Dashboard code (Streamlit or Flask templates)
* Instructions to run the project
* Sample database file


